# set-option -g mouse on
# set-window-option -g mode-mouse on
set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"
# set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
# Ctrl-a instead of Ctrl-b
set -g prefix C-a
unbind C-b
bind C-a send-prefix

set -sg escape-time 1                          # changing the Default Delay

# Use the xterm-256color terminal
# set -g default-terminal "xterm-256color"
set -g default-terminal "tmux-256color"
# set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

# Apply Tc
set-option -ga terminal-overrides ",xterm-256color:Tc"

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# listen for activity on all windows
set -g bell-action any

setw -g mode-keys vi
unbind [
bind Escape copy-mode
bind Enter copy-mode # enter copy mode
unbind p
bind p paste-buffer

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" # macos needs to brew install reattach-to-user-namespace

bind-key a last-window                         # go to last-window
bind-key b break-pane                          # break pane into window
bind-key / command-prompt "find-window %1"     # find window

# force a reload of the config file
unbind r
bind-key r source-file ~/.tmux.conf \; display "Reloaded!"

# kill
unbind K
bind K confirm-before "kill-window"

unbind ^x
bind ^x kill-pane

# split current window horizontally
bind - split-window -v
# split current window vertically
bind _ split-window -h


# windows navigation - using Shift-vim key without prefix
bind -n S-Left  previous-window
bind -n S-Right next-window

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# # panes navigation - with prefix
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R


# pane navigation - using Alt-vim key without prefix
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# resize panes and repeat
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5



# pane
set -g pane-border-style fg=colour245
set -g pane-active-border-style fg=colour39

set -g message-style fg=colour16,bg=colour221,bold

# status bar
set -g status-left-length 32
set -g status-style bg=black,fg=white
set -g status-justify centre
set -g status-left '#[fg=black,bg=colour37,noreverse,nobold] ❐  #[fg=black,bg=color37,nobold] #S '
set -g status-right '#[fg=colour233,bg=colour37] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20
set -g status-interval 60

setw -g window-status-format '#[fg=black,bg=colour37,nobold] #I #W '
set -g window-status-current-format "#[fg=black,bg=colour87,noreverse,bold] #I #[fg=black, bg=colour37, nobold] #W "

# don't wait for an escape sequence after hitting
# Esc. fixes insert mode exit lag in vim
set -sg escape-time 0
#++++++++++++++++++++++

# mproved autoread prevents this by automatically reading a file from disk if it was changed.
# Works only if autoread option is set (enable it with set autoread in .vimrc).
# work with https://github.com/tmux-plugins/vim-tmux-focus-events
set -g focus-events on
